import{f as A,n as y,h as N,s as j}from"./property-information-Boo8Xpef.js";import{p as d}from"./comma-separated-tokens-Dw-VBL9A.js";import{p as l}from"./space-separated-tokens-D7QSIrTI.js";import{p as C}from"./hast-util-parse-selector-TXfch5wI.js";function h(t,e,n){const r=n?x(n):void 0;function i(o,s,...a){let f;if(o==null){f={type:"root",children:[]};const c=s;a.unshift(c)}else{f=C(o,e);const c=f.tagName.toLowerCase(),u=r?r.get(c):void 0;if(f.tagName=u||c,S(s))a.unshift(s);else for(const[g,b]of Object.entries(s))M(t,f.properties,g,b)}for(const c of a)p(f.children,c);return f.type==="element"&&f.tagName==="template"&&(f.content={type:"root",children:f.children},f.children=[]),f}return i}function S(t){if(t===null||typeof t!="object"||Array.isArray(t))return!0;if(typeof t.type!="string")return!1;const e=t,n=Object.keys(t);for(const r of n){const i=e[r];if(i&&typeof i=="object"){if(!Array.isArray(i))return!0;const o=i;for(const s of o)if(typeof s!="number"&&typeof s!="string")return!0}}return!!("children"in t&&Array.isArray(t.children))}function M(t,e,n,r){const i=A(t,n);let o;if(r!=null){if(typeof r=="number"){if(Number.isNaN(r))return;o=r}else typeof r=="boolean"?o=r:typeof r=="string"?i.spaceSeparated?o=l(r):i.commaSeparated?o=d(r):i.commaOrSpaceSeparated?o=l(d(r).join(" ")):o=m(i,i.property,r):Array.isArray(r)?o=[...r]:o=i.property==="style"?w(r):String(r);if(Array.isArray(o)){const s=[];for(const a of o)s.push(m(i,i.property,a));o=s}i.property==="className"&&Array.isArray(e.className)&&(o=e.className.concat(o)),e[i.property]=o}}function p(t,e){if(e!=null)if(typeof e=="number"||typeof e=="string")t.push({type:"text",value:String(e)});else if(Array.isArray(e))for(const n of e)p(t,n);else if(typeof e=="object"&&"type"in e)e.type==="root"?p(t,e.children):t.push(e);else throw new Error("Expected node, nodes, or string, got `"+e+"`")}function m(t,e,n){if(typeof n=="string"){if(t.number&&n&&!Number.isNaN(Number(n)))return Number(n);if((t.boolean||t.overloadedBoolean)&&(n===""||y(n)===y(e)))return!0}return n}function w(t){const e=[];for(const[n,r]of Object.entries(t))e.push([n,r].join(": "));return e.join("; ")}function x(t){const e=new Map;for(const n of t)e.set(n.toLowerCase(),n);return e}const G=["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","solidColor","textArea","textPath"],F=h(N,"div"),P=h(j,"g",G);export{F as h,P as s};
